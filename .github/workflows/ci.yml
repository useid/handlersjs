name: CI

on:
  push:
    branches:
      - main
      - next
      - release
      - release/*
      - feat/*
      - fix/*
      - test/*
      - chore/*
      - build/*
      - snyk-*

    tags:
      - '*'

env:
  NPM_TOKEN: ${{secrets.GA_TOKEN}}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Extract tag
        id: extract-tag
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: Check tag
        run: echo ${{ steps.extract-tag.outputs.tag }}

      - name: Extract branch
        id: extract-branch
        run: echo "::set-output name=branch::${GITHUB_REF/refs\/heads\//}"

      - name: Check branch
        run: echo ${{ steps.extract-branch.outputs.branch }}

      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com

      - name: Install dependencies
        run: npm run bootstrap
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GA_TOKEN }}

      - run: npm run build:all

      - run: npm run lint:all

      - run: npm run test:ci

  snyk:
    name: Snyk Vulnerability Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --dev --strict-out-of-sync=false --severity-threshold=critical --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  release:
    name: Create release
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

  publish-npm:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: release

    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/
  
      - name: Install dependencies
        run: npm run bootstrap
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GA_TOKEN }}

      - run: npm run build:all

      - run: npm publish packages/handlersjs-core
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - run: npm publish packages/handlersjs-http
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - run: npm publish packages/handlersjs-storage
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - run: npm publish packages/handlersjs-logging
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-docs:
    name: Publish docs
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2

      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Store DigitalOcean credentials
        run: doctl kubernetes cluster kubeconfig save dgt-k8s

      - name: Restart deployment
        run: |
          kubectl rollout restart deployment dgt-docs-deployment  

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/dgt-docs-deployment